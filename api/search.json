[{"id":"ab58292848b10dce6b1c694b6eb9b247","title":"Hi there!","content":"Are you watching? Welcome to my website, here I’ll update some blogs and pieces of thoughts.","slug":"Greetings","date":"2023-07-27T07:41:55.000Z","categories_index":"","tags_index":"碎碎念","author_index":"Chujun Xiang"},{"id":"c5d49efbe59ab9c6266a30eec8df7a97","title":"提示工程简介与方法概述","content":"简介提示工程（Prompt Engineering）是一门较新的学科，关注提示词开发和优化，帮助用户将大语言模型（Large Language Model, LLM）用于各场景和研究领域。 \n意义 掌握了提示工程相关技能将有助于用户更好地了解大型语言模型的能力和局限性。研究人员可利用提示工程来提升大语言模型处理复杂任务场景的能力，如问答和算术推理能力。开发人员可通过提示工程设计、研发强大的工程技术，实现和大语言模型或其他生态工具的高效接轨。\n误区 提示工程不仅仅是关于设计和研发提示词。它包含了与大语言模型交互和研发的各种技能和技术。提示工程在实现和大语言模型交互、对接，以及理解大语言模型能力方面都起着重要作用。用户可以通过提示工程来提高大语言模型的安全性，也可以赋能大语言模型，比如借助专业领域知识和外部工具来增强大语言模型能力。\n提示词的基本要素指令：想要模型执行的特定任务或指令。\n上下文：包含外部信息或额外的上下文信息，引导语言模型更好地响应。\n输入数据：用户输入的内容或问题。\n输出指示：指定输出的类型或格式。\n提示词的通用技巧\n从简入繁：当有一个涉及许多不同子任务的大任务时，可以尝试将任务分解为更简单的子任务，并随着获得更好的结果而不断构建。这避免了在提示设计过程中一开始就添加过多的复杂性。\n\n指令化操作：可以使用命令来指示模型执行各种简单任务，例如“写入”、“分类”、“总结”、“翻译”、“排序”等，从而为各种简单任务设计有效的提示。可以使用一些清晰的分隔符，如“###”，来分隔指令和上下文。举例：\ntxtPrompt：\n### 指令 ###\n将以下文本翻译成西班牙语：\n文本：“hello！”\n\nOutput：\n¡Hola!\n提高具体性： 提示越具体和详细，结果就越好。可以通过提供示例、格式、描述性提示等方式来强化输出。此外，还需要考虑 Prompt 长度（因为这个是受限制的），所以需要在这点和细节之间做好取舍。举例：\ntxtPrompt:\n提取以下文本中的地名。\n所需格式：\n地点：&lt;逗号分隔的公司名称列表&gt;\n输入：“虽然这些发展对研究人员来说是令人鼓舞的，但仍有许多谜团。里斯本未知的香帕利莫德中心的神经免疫学家Henrique Veiga-Fernandes说：“我们经常在大脑和我们在周围看到的效果之间有一个黑匣子。”“如果我们想在治疗背景下使用它，我们实际上需要了解机制。””\n\nOutput:\n地点：里斯本，香帕利莫德中心\n保持精确性：在提高具体性和采用了指令化等操作之后，很容易导致 Prompt 的目的变得不明确甚至是被混淆，换而言之，就是过多的辅助提示词影响了 LLM 对 Prompt 意图的理解。因此需要保持 Prompt 的直接性和适当的简洁性。\n\n强调需要做的事：设计 Prompt 时的另一个常见技巧是避免说不要做什么，而是说要做什么。这鼓励更具体化，并关注导致模型产生良好响应的细节。举例：\ntxtPrompt1:\n以下是向客户推荐电影的代理程序。不要询问兴趣。不要询问个人信息。\n顾客：请根据我的兴趣推荐电影。\n客服：\n\nOutput1:\n当然，我可以根据您的兴趣推荐电影。您想看什么类型的电影？您喜欢动作片、喜剧片、爱情片还是其他类型的电影？\n\nPrompt2:\n以下是向客户推荐电影的代理程序。客服负责从全球热门电影中推荐电影。它应该避免询问用户的偏好并避免询问个人信息。如果代理没有电影推荐，它应该回答“抱歉，今天找不到电影推荐。”。\n顾客：请根据我的兴趣推荐一部电影。\n客服：\n\nOutput2:\n抱歉，我没有关于您兴趣的任何信息。不过，这是目前全球热门的电影列表：[电影列表]。希望您能找到喜欢的电影！\n\n常见提示技术Zero-Shot零样本提示即为：不事先给 LLM 提供样例，而直接将问题给出。示例如下：\ntxtPrompt:\n将文本分类为中性、负面或正面。\n文本：我认为这次假期还可以。\n情感：\n\nOutput:\n中性Few-Shot虽然大型语言模型展示了惊人的零样本能力，但在使用零样本设置时，它们在更复杂的任务上仍然表现不佳。基于此原因，少样本提示可以作为一种技术，以启用上下文学习 (In-Context Learning) 并引导模型实现更好的性能，示例如下：\ntxtPrompt:\nA &quot;whatpu&quot; is a small, furry animal native to Tanzania. An example of a sentence that uses\nthe word whatpu is:\nWe were traveling in Africa and we saw these very cute whatpus.\nTo do a &quot;farduddle&quot; means to jump up and down really fast. An example of a sentence that uses\nthe word farduddle is:\n\nOutput:\nWhen we won the game, we all started to farduddle in celebration.txtPrompt:\nThis is awesome! // Negative\nThis is bad! // Positive\nWow that movie was rad! // Positive\nWhat a horrible show! //\n\nOutput:\nNegative标准的少样本提示对许多任务都有效，但仍然不是一种完美的技术，特别是在处理更复杂的推理任务的时候，例子如下：\ntxtPrompt:\n这组数字中的奇数加起来是一个偶数：4、8、9、15、12、2、1。\nA：答案是False。\n这组数字中的奇数加起来是一个偶数：17、10、19、4、8、12、24。\nA：答案是True。\n这组数字中的奇数加起来是一个偶数：16、11、14、4、8、13、24。\nA：答案是True。\n这组数字中的奇数加起来是一个偶数：17、9、10、12、13、4、2。\nA：答案是False。\n这组数字中的奇数加起来是一个偶数：15、32、5、13、82、7、1。\nA：\n\nOutput:\n答案是True。显然这个答案是不靠谱的，在涉及较为复杂的问题时，可能需要经历多个推理步骤才能得到最终结果，因此我们需要更加合适的激励策略。\nChain-of-Thought (CoT)Chain-of-Thought (CoT) 是一种改进的激励策略，用于提高 LLM 复杂推理任务上的性能，如算术推理、常识推理和符号推理。与 ICL 中简单地使用输入-输出对构造提示不同，CoT 合并了中间推理步骤，可以将最终输出引入提示中。\n对于上面的问题，可以参考 CoT 的思路对 Prompt 进行调整：\ntxtPrompt:\n这组数中的奇数加起来是偶数：4、8、9、15、12、2、1。\nA：将所有奇数相加（9、15、1）得到25。答案为False。\n这组数中的奇数加起来是偶数：15、32、5、13、82、7、1。\nA：\n\nOutput:\n将所有奇数相加（15、5、13、7、1）得到41。答案为False。可以看到 LLM 给出了我们所期望的正确回复。\nLet’s think step by step \n这是一种特殊的零样本 CoT 方法，举例如下：\ntxtPrompt1:\n我去市场买了10个苹果。我给了邻居2个苹果和修理工2个苹果。然后我去买了5个苹果并吃了1个。我还剩下多少苹果？\n\nOutput1:\n11个苹果\n\n\nPrompt2：\n我去市场买了10个苹果。我给了邻居2个苹果和修理工2个苹果。然后我去买了5个苹果并吃了1个。我还剩下多少苹果？\n让我们逐步思考。\n\nOutput2：\n首先，您从10个苹果开始。\n您给了邻居和修理工各2个苹果，所以您还剩下6个苹果。\n然后您买了5个苹果，所以现在您有11个苹果。\n最后，您吃了1个苹果，所以您还剩下10个苹果。Self-Consistency自我一致性方法的基本宗旨是通过少样本 CoT 采样多个不同的推理路径，并使用生成结果选择最一致的答案。这有助于提高CoT提示在涉及算术和常识推理的任务中的性能。示例如下：\ntxtPrompt:\nQ：林中有15棵树。林业工人今天将在林中种树。完成后，将有21棵树。林业工人今天种了多少棵树？\nA：我们从15棵树开始。后来我们有21棵树。差异必须是他们种树的数量。因此，他们必须种了21-15 = 6棵树。答案是6。\nQ：停车场有3辆汽车，又来了2辆汽车，停车场有多少辆汽车？\nA：停车场已经有3辆汽车。又来了2辆。现在有3 + 2 = 5辆汽车。答案是5。\nQ：Leah有32块巧克力，她的姐姐有42块。如果他们吃了35块，他们总共还剩多少块？\nA：Leah有32块巧克力，Leah的姐姐有42块。这意味着最初有32 + 42 = 74块巧克力。已经吃了35块。因此，他们总共还剩74-35 = 39块巧克力。答案是39。\nQ：Jason有20个棒棒糖。他给Denny一些棒棒糖。现在Jason只有12个棒棒糖。Jason给Denny多少棒棒糖？\nA：Jason有20个棒棒糖。因为他现在只有12个，所以他必须把剩下的给Denny。他给Denny的棒棒糖数量必须是20-12 = 8个棒棒糖。答案是8。\nQ：Shawn有五个玩具。圣诞节，他从他的父母那里得到了两个玩具。他现在有多少个玩具？\nA：他有5个玩具。他从妈妈那里得到了2个，所以在那之后他有5 + 2 = 7个玩具。然后他从爸爸那里得到了2个，所以总共他有7 + 2 = 9个玩具。答案是9。\nQ：服务器房间里有9台计算机。从周一到周四，每天都会安装5台计算机。现在服务器房间里有多少台计算机？\nA：从周一到周四有4天。每天都添加了5台计算机。这意味着总共添加了4 * 5 =\n20台计算机。一开始有9台计算机，所以现在有9 + 20 = 29台计算机。答案是29。\nQ：Michael有58个高尔夫球。星期二，他丢失了23个高尔夫球。星期三，他又丢失了2个。星期三结束时他还剩多少个高尔夫球？\nA：Michael最初有58个球。星期二他丢失了23个，所以在那之后他有58-23 = 35个球。星期三他又丢失了2个，所以现在他有35-2 = 33个球。答案是33。\nQ：Olivia有23美元。她用每个3美元的价格买了五个百吉饼。她还剩多少钱？\nA：她用每个3美元的价格买了5个百吉饼。这意味着她花了5\nQ：当我6岁时，我的妹妹是我的一半年龄。现在我70岁了，我的妹妹多大？\nA：\n\nOutput1:\n当我6岁时，我的妹妹是我的一半年龄，也就是3岁。现在我70岁了，所以她是70-3 = 67岁。答案是67。\n\nOutput2:\n当叙述者6岁时，他的妹妹是他年龄的一半，也就是3岁。现在叙述者70岁了，他的妹妹应该是70-3 = 67岁。答案是67。\n\nOutput3:\n当我6岁时，我的妹妹是我的一半年龄，也就是3岁。现在我70岁了，所以她是70/2 = 35岁。答案是35。Tree of Thoughts (ToT)对于需要探索或预判战略的复杂任务来说，传统或简单的提示技巧是不够的。最近有研究者提出了思维树（Tree of Thoughts，ToT）框架，该框架基于思维链提示进行了总结，引导语言模型探索把思维作为中间步骤来解决通用问题。\n可以用下面一张图来说明白这几种 Prompt 技巧的关系与区别：\nReference提示工程指南：https://www.promptingguide.ai/zh\n","slug":"提示工程简介与方法概述","date":"2023-07-27T02:46:39.000Z","categories_index":"LLM,Prompt Engineering","tags_index":"LLM,Prompt Engineering","author_index":"Chujun Xiang"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new postbash$ hexo new &quot;My New Post&quot;More info: Writing\nRun serverbash$ hexo serverMore info: Server\nGenerate static filesbash$ hexo generateMore info: Generating\nDeploy to remote sitesbash$ hexo deployMore info: Deployment\n","slug":"hello-world","date":"2023-07-26T08:13:10.000Z","categories_index":"","tags_index":"","author_index":"Chujun Xiang"}]